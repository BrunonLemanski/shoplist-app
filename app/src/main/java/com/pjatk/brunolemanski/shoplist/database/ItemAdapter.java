package com.pjatk.brunolemanski.shoplist.database;

import android.content.Context;
import android.database.Cursor;
import android.support.annotation.NonNull;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.TextView;
import com.pjatk.brunolemanski.shoplist.R;


/**
 * Created by brunonlemanski on 28/10/2019.
 */
public class ItemAdapter extends RecyclerView.Adapter<ItemAdapter.ItemViewHolder> {

    //------------------------------------------------------ Variables
    private Context mContext;
    private Cursor mCursor;
    private OnItemClickListener mListener;


    //------------------------------------------------------ Constructor

    /**
     * Class constructor.
     * @param context
     * @param cursor
     */
    public ItemAdapter(Context context, Cursor cursor) {
        mContext = context;
        mCursor= cursor;
    }


    //------------------------------------------------------ Classes
    /**
     * ViewHolder class.
     */
    public class ItemViewHolder extends RecyclerView.ViewHolder{

        //Variables corresponding to fields in list_item.xml
        public TextView tVNameOfProduct;
        public TextView tVPrice;
        public TextView tVQuantity;
        public TextView tVTotal;
        public CheckBox cBDone;

        public ItemViewHolder(@NonNull View itemView) {
            super(itemView);

            //Assign TextView to fields in .xml
            tVNameOfProduct = itemView.findViewById(R.id.textview_titleItem);
            tVPrice = itemView.findViewById(R.id.textview_priceItem);
            tVQuantity = itemView.findViewById(R.id.textview_quantityItem);
            tVTotal = itemView.findViewById(R.id.textview_totalItem);
            cBDone = itemView.findViewById(R.id.checkbox_done);

            /*
            cBDone.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    if(mListener != null){
                        int position= getAdapterPosition();
                        if(position != RecyclerView.NO_POSITION){
                            mListener.setDone(this, position);
                        }
                    }

                }
            });*/

        }
    }


    /**
     * Item interface.
     * -> IMPORTANT
     */
    public interface OnItemClickListener {
        void setDone(RecyclerView.ViewHolder viewHolder, int position);
        void setUnready(RecyclerView.ViewHolder viewHolder, int position);
    }


    //------------------------------------------------------ Methods
    /**
     * Creating ViewHolder.
     * Autogenerated method.
     * @param viewGroup
     * @param i
     * @return
     */
    @NonNull
    @Override
    public ItemViewHolder onCreateViewHolder(ViewGroup viewGroup, int i) {
        LayoutInflater inflater = LayoutInflater.from(mContext);
        View view = inflater.inflate(R.layout.list_item, viewGroup, false);

        return new ItemViewHolder(view);
    }


    /**
     * Binding ViewHolder
     * Autogenerated method.
     * @param itemViewHolder
     * @param i
     */
    @Override
    public void onBindViewHolder(@NonNull final ItemViewHolder itemViewHolder, final int i) {
        if(!mCursor.moveToPosition(i)) {
            return;
        }

        String name = mCursor.getString(mCursor.getColumnIndex(ItemDbAdapter.ItemDbEntry.COLUMN_TITLE));
        int quantity = mCursor.getInt(mCursor.getColumnIndex(ItemDbAdapter.ItemDbEntry.COLUMN_QUANTITY));
        double price = mCursor.getDouble(mCursor.getColumnIndex(ItemDbAdapter.ItemDbEntry.COLUMN_PRICE));
        double total = (double)quantity*price;
        long id = mCursor.getLong(mCursor.getColumnIndex(ItemDbAdapter.ItemDbEntry._ID));
        boolean done = mCursor.getInt(mCursor.getColumnIndex(ItemDbAdapter.ItemDbEntry.COLUMN_DONE)) > 0;

        String viewQuantity = quantity + " szt";
        String viewPrice = price + " zł";
        String viewTotal = total + " zł";

        itemViewHolder.tVNameOfProduct.setText(name);
        itemViewHolder.tVQuantity.setText(viewQuantity);
        itemViewHolder.tVPrice.setText(viewPrice);
        itemViewHolder.tVTotal.setText(viewTotal);

        //in some cases, it will prevent unwanted situations
        itemViewHolder.cBDone.setChecked(done);


        itemViewHolder.cBDone.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                mCursor.moveToPosition(i);
                int check = mCursor.getInt(mCursor.getColumnIndex(ItemDbAdapter.ItemDbEntry.COLUMN_DONE));
                String title = mCursor.getString(mCursor.getColumnIndex(ItemDbAdapter.ItemDbEntry.COLUMN_TITLE));
                int id = mCursor.getPosition();


                System.out.println("Status itemu: "+ title + " - " + check + " - " + id);
                if(check == 0 ){
                    mListener.setDone(itemViewHolder, id);
                } else if(check == 1){
                    System.out.println("TEST UNREADY");
                    mListener.setUnready(itemViewHolder, id);
                }
            }
        });

        //Passing id to each line - IMPORTANT - without this line, is thrown away Null Exception Pointer during getting Item Tag.
        itemViewHolder.itemView.setTag(id);
    }


    /**
     * Getting amount of item.
     * Autogenerated method.
     * @return Amount of item.
     */
    @Override
    public int getItemCount() {
        return mCursor.getCount();
    }


    public void swapCursor(Cursor newCursor) {
        if(mCursor != null) {
            mCursor.close();
        }

        mCursor = newCursor;

        if(newCursor != null) {
            notifyDataSetChanged();
        }
    }


    public void setOnItemClickListener(OnItemClickListener listener) {
        mListener = listener;
    }
}
